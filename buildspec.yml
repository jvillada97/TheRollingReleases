version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo Installing dependencies...
      - pip install -r blacklist/requirements.txt
  pre_build:
    on-failure: ABORT
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 390844777092.dkr.ecr.us-east-1.amazonaws.com
  build:
    on-failure: ABORT
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t therollingreleases/main .
      - docker tag therollingreleases/main:latest 390844777092.dkr.ecr.us-east-1.amazonaws.com/therollingreleases/main:latest
  post_build:
    on-failure: ABORT
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 390844777092.dkr.ecr.us-east-1.amazonaws.com/therollingreleases/main:latest
      - echo Writing image definitions file...
      - printf '[{"name":"container-blacklist-app","imageUri":"312883711942.dkr.ecr.us-east-2.amazonaws.com/container_app:latest"}]' > imagedefinitions.json
      - printf '{"ImageURI":"390844777092.dkr.ecr.us-east-1.amazonaws.com/therollingreleases/main:latest"}' > imageDetail.json
      - cat imagedefinitions.json

artifacts:
  files:
    - '**/*'
    - 'imagedefinitions.json'
    - 'imageDetail.json'
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - 'appspec.json'
        - 'taskdef.json'
    ImageArtifact:
      files:
        - 'imageDetail.json'
  discard-paths: yes